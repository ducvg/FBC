@section Stylesheets {
    <link href="~/js/cropper/cropper.css" rel="stylesheet" />
    <script src="~/js/cropper/cropper.js"></script>
    <style>
        .image-box {
            aspect-ratio: 1 / 1;
            max-height: 350px;
            min-height: 150px;
            background: #f6f3f3;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            position: relative;
            overflow: hidden;
        }

        .mt-large {
            margin-top: 3rem;
        }

        .upload {
            text-align: center;
            cursor: pointer;
        }

        .crop-controls {
            display: flex;
            justify-content: space-evenly;
            margin-top: 1rem;
        }

            .crop-controls button {
                padding: 5px 20px;
            }

        .crop-btn {
            background: #37a572;
            color: white;
        }

        .reset-btn {
            background: #000000b0;
            color: white;
        }

        .crop-btn:focus, .crop-btn:active:focus, .btn-link.nav-link:focus, .form-control:focus, .form-check-input:focus {
            box-shadow: 0 0 0 0.2rem rgba(40,167,69,.8);
        }

        .reset-btn:focus, .reset-btn:active:focus, .btn-link.nav-link:focus, .form-control:focus, .form-check-input:focus {
            box-shadow: 0 0 0 0.2rem #0000008c;
        }

        .container-shadow {
            box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;
        }

        .roboto {
            font-family: roboto
        }
        .category-item{
            
        }
    </style>
    <style>
        .input-text {
            color: rgba(0,0,0,.87);
            border-bottom-color: rgba(0,0,0,.42);
            font-size: 1rem;
            font-weight: 400;
            letter-spacing: .009375em;
            text-decoration: inherit;
            text-transform: inherit;
            align-self: flex-end;
            box-sizing: border-box;
            width: 100%;
            padding: 1px 16px 1px;
            transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);
            border: none;
            border-bottom: 1px solid;
            border-radius: 4px 4px 0 0;
            background: rgb(245, 245, 245);
            height: 44px;
        }

            .input-text : hover {
                border-bottom-color: rgba(0,0,0,.87);
                background: #ececec;
            }

            .input-text:focus {
                border-color: #37a572;
            }

        input:focus-visible {
            outline: 0
        }
    </style>
}
<h3 class="mt-large" style="text-align:center"><b>Describe Your Book</b></h3>
<div class="container mt-large container-shadow p-4" style="font-family:Philosopher">
    <div class="book-images">
        <h3 class="roboto">Images:</h3>
        <div class="row mt-4">
            <div class="col-3">
                <div class="image-box">
                    <img src="" id="image-front" />
                    <div class="upload" onclick="document.getElementById('front').click()">
                        <input required id="front" type="file" accept="image/*" hidden onchange="uploadImage('front')" />
                        <div id="placeholder-front">
                            <img src="~/asset/image/image_icon.png" style="width:50px" /><br /><br />
                            <h5><b>Front Book's Cover</b></h5>
                        </div>
                    </div>
                </div>
                <div class="crop-controls" id="controls-front">
                    <button class="btn btn-outline-success crop-btn" onclick="cropImage('front')">Crop</button>
                    <button class="btn btn-outline-dark reset-btn" onclick="clearCrop('front')">Reset</button>
                </div>
            </div>
            <div class="col-3">
                <div class="image-box">
                    <img src="" id="image-back" />
                    <div class="upload" onclick="document.getElementById('back').click()">
                        <input required id="back" type="file" accept="image/*" hidden onchange="uploadImage('back')" />
                        <div id="placeholder-back">
                            <img src="~/asset/image/image_icon.png" style="width:50px" /><br /><br />
                            <h5><b>Back Book's Cover</b></h5>
                        </div>
                    </div>
                </div>
                <div class="crop-controls" id="controls-back">
                    <button class="btn btn-outline-success crop-btn" onclick="cropImage('back')">Crop</button>
                    <button class="btn btn-outline-dark reset-btn" onclick="clearCrop('back')">Reset</button>
                </div>
            </div>
            <div class="col-3">
                <div class="image-box">
                    <img src="" id="image-spine" />
                    <div class="upload" onclick="document.getElementById('spine').click()">
                        <input required id="spine" type="file" accept="image/*" hidden onchange="uploadImage('spine')" />
                        <div id="placeholder-spine">
                            <img src="~/asset/image/image_icon.png" style="width:50px" /><br /><br />
                            <h5><b>Book's Spine</b></h5>
                        </div>
                    </div>
                </div>
                <div class="crop-controls" id="controls-spine">
                    <button class="btn btn-outline-success crop-btn" onclick="cropImage('spine')">Crop</button>
                    <button class="btn btn-outline-dark reset-btn" onclick="clearCrop('spine')">Reset</button>
                </div>
            </div>
            <div class="col-3">
                <div class="image-box">
                    <img src="" id="image-edge" />
                    <div class="upload" onclick="document.getElementById('edge').click()">
                        <input required id="edge" type="file" accept="image/*" hidden onchange="uploadImage('edge')" />
                        <div id="placeholder-edge">
                            <img src="~/asset/image/image_icon.png" style="width:50px" /><br /><br />
                            <h5><b>Book's Fore-edge</b></h5>
                        </div>
                    </div>
                </div>
                <div class="crop-controls" id="controls-edge">
                    <button class="btn btn-outline-success crop-btn" onclick="cropImage('edge')">Crop</button>
                    <button class="btn btn-outline-dark reset-btn" onclick="clearCrop('edge')">Reset</button>
                </div>
            </div>
        </div>
    </div>
    <div class="mt-large">
        <h3 class="roboto">General Information</h3>
        <div class="row mt-4" style="text-align: ;">
            <div class="col-6">
                <input required class="input-text w-75" type="text" placeholder="Book's Title" name="Title" id="Title">
            </div>
            <div class="col-3">
                <input required class="input-text w-75" type="text" placeholder="Author" name="Author" id="Author">
            </div>
            <div class="col-3">
                <input required class="input-text w-75" type="text" placeholder="Publisher" name="Publisher" id="Publisher">
            </div>
        </div>
        <div class="category-box mt-3">
            <div>
                @for (int i = 0; i < 15; i++)
                {
                    <span onclick="selectCategory(this)" class="category-item" data-category="@i">Category @i</span>
                }

                <select id="categories" name="categories" required hidden multiple>
                    @for (int i = 0; i < 15; i++)
                    {
                        <option value="@i">Category @i</option>
                    }
                </select>
            </div>
        </div>
    </div>
</div>

<script>
    let croppers = {};

    function uploadImage(inputId) {
        const input = document.getElementById(inputId);
        const imgSrc = document.getElementById('image-' + inputId);
        const placeholderDiv = document.getElementById('placeholder-' + inputId);
        const controlsDiv = document.getElementById('controls-' + inputId);

        if (input.files && input.files[0]) {
            const reader = new FileReader();

            reader.onload = function (e) {
                imgSrc.src = e.target.result;
                imgSrc.style.display = 'block';
                placeholderDiv.style.display = 'none';
                controlsDiv.style.display = 'flex';

                // Initialize Cropper
                if (croppers[inputId]) {
                    croppers[inputId].destroy();
                }
                croppers[inputId] = new Cropper(imgSrc, {
                    aspectRatio: 0,
                    autoCropArea: 0,
                    viewMode: 1,
                    dragMode: 'move'
                });
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

    function cropImage(inputId) {
        const cropper = croppers[inputId];
        const canvas = cropper.getCroppedCanvas();
        const croppedImage = canvas.toDataURL('image/png');

        const imgSrc = document.getElementById('image-' + inputId);
        imgSrc.src = croppedImage;
        imgSrc.style.display = 'block';
        imgSrc.style.height = '100%';

        // Destroy Cropper instance after cropping
        cropper.destroy();
        croppers[inputId] = null;
    }

    function clearCrop(inputId) {
        const cropper = croppers[inputId];
        if (cropper) {
            cropper.destroy();
            croppers[inputId] = null;
        }

        const imgSrc = document.getElementById('image-' + inputId);
        imgSrc.src = '';
        imgSrc.style.display = 'none';

        const placeholderDiv = document.getElementById('placeholder-' + inputId);
        placeholderDiv.style.display = 'block';
        const input = document.getElementById(inputId);
        input.value = '';

    }
</script>

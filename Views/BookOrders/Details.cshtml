@* @model FBC.Models.BookOrder

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evSX huddled7glt/7zUS+FwS1j8fQSYxA++FUvbsKxBgOSlCzStcZ5zDln7z9+e79/Q" crossorigin="anonymous">
    <link rel="stylesheet" href="style.css">
    <style>


    </style>
</head>
<div class="details-container">
    <div class="details-title">
        Book Order Details
    </div>
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Total)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Total)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Recipient)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Recipient)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.OrderDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.OrderDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ShippedDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ShippedDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Phone)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Phone)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.User.Id)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.BookOrderId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
 *@
 @model FBC.Models.BookOrder

@{
    ViewData["Title"] = "Book Order Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evSX huddled7glt/7zUS+FwS1j8fQSYxA++FUvbsKxBgOSlCzStcZ5zDln7z9+e79/Q" crossorigin="anonymous">
    <link rel="stylesheet" href="style.css">
    <style>
        /* Title Styling */
        .details-container {
            margin-top: 2rem; /* Add some top margin for better separation */
        }

        .details-title {
            padding: 2rem 2rem; /* Add padding for title content */
            background-color: #57c592; /* Set background color */
            color: white; /* Set text color for better contrast */
            text-align: center; /* Center-align the title text */
            font-size: 1.25rem; /* Increase title font size slightly */
            border-radius: 5px; /* Add subtle border radius for aesthetics */
        }

        /* Additional Styling (Optional) */
        body {
            font-family: sans-serif; /* Set a basic font family */
        }

        .details-container {
            border: 1px solid #ddd; /* Add a thin border for the details container */
            padding: 1rem; /* Add some padding for better readability */
        }

        dl dt {
            font-weight: bold; /* Make labels bold for distinction */
        }

        .row {
            margin-bottom: 1rem; /* Add some space between detail rows */
        }

        table {
            border-collapse: collapse;
            width: 100%;
        }

        th, td {
            padding: 8px;
            text-align: left;
            border: 1px solid #ddd;
        }

        th {
            background-color: #f2f2f2;
        }

        .details-container .actions {
            text-align: center;
            margin-top: 20px; /* Space between form and action link */
        }

            /* Action link styles */
            .details-container .actions a {
                margin: 5px;
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                text-decoration: none;
                color: #fff;
                background-color: #57c592; /* Blue background */
                transition: background-color 0.2s
            }
    </style>
</head>
<body>
    <div class="details-container">
        <div class="details-title">
            Book Order Details
        </div>
        <dl class="row">
            <dt class="col-sm-2">
                
                @Html.DisplayNameFor(model => model.Recipient)
            </dt>
            <dd class="col-sm-10">
                
                @Html.DisplayFor(model => model.Recipient)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address)
               
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Address)
                
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Phone)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Phone)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.OrderDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.OrderDate)
            </dd>
            <dt class="col-sm-2">

                @Html.DisplayNameFor(model => model.ShippedDate)
            </dt>
            <dd class="col-sm-10">
                @if (Model.ShippedDate == null)
                {
                    <span>--NA--</span>
                }
                else
                {
                    @Html.DisplayFor(modelItem => Model.ShippedDate)
                }
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Status)
            </dt>
            <dd class="col-sm-10">
                @if (Model.Status == 1)
                {
                    <span>Successful Delivery</span>
                }
                else if (Model.Status == 2)
                {
                    <span>Shipping</span>
                }
                else
                {
                    <span>Delivery Failse</span>
                }
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Total)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Total) Bookcoin
           
        </dl>
        <h3>Book List Exchanged</h3>
        <table>
            <tr >
                <th style="background-color:#57c592; color:#fff">Book Title</th>
                <th style="background-color:#57c592; color:#fff">Price</th>
            </tr>
            @foreach (var item in Model.Books)
            {
                <tr>
                    <td>@item.Title</td>
                    <td>@item.Credit.Value.ToString("#,##0.") Bookcoin</td>
                </tr>
            }
            
        </table>
       
    </div>
    <div class="details-container">
        <div class="actions">
            <a asp-action="Index">Back to List</a>
        </div>
    </div>
    
</body>
</html>
